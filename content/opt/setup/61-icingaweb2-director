#!/bin/bash

. /opt/helpers

if evaluate_boolean "${ICINGAWEB2_FEATURE_DIRECTOR}"; then

	echo "Director: Enabling Icinga Director module"

	ICINGAWEB2_DIRECTOR_CONFIG_PATH=/etc/icingaweb2/modules/director
	ICINGAWEB2_DIRECTOR_CONFIG=${ICINGAWEB2_DIRECTOR_CONFIG_PATH}/kickstart.ini
	ICINGAWEB2_DIRECTOR_PGSQL_HOST=${ICINGAWEB2_DIRECTOR_PGSQL_HOST:-${DEFAULT_PGSQL_HOST}}
	ICINGAWEB2_DIRECTOR_PGSQL_PORT=${ICINGAWEB2_DIRECTOR_PGSQL_PORT:-${DEFAULT_PGSQL_PORT}}
	ICINGAWEB2_DIRECTOR_PGSQL_USER=${ICINGAWEB2_DIRECTOR_PGSQL_USER:-${DEFAULT_PGSQL_USER}}
	ICINGAWEB2_DIRECTOR_PGSQL_PASS=${ICINGAWEB2_DIRECTOR_PGSQL_PASS:-${DIRECTOR_PASSWORD:-${DEFAULT_PGSQL_PASS}}}
	ICINGAWEB2_DIRECTOR_PGSQL_DATA=${ICINGAWEB2_DIRECTOR_PGSQL_DATA:-icingaweb2_director}
	ICINGAWEB2_DIRECTOR_ENDPOINT_FQDN=${ICINGAWEB2_DIRECTOR_ENDPOINT_FQDN:-$ICINGAWEB2_API_TRANSPORT_HOST}
	ICINGAWEB2_DIRECTOR_ENDPOINT_HOST=${ICINGAWEB2_DIRECTOR_ENDPOINT_HOST:-$ICINGAWEB2_API_TRANSPORT_HOST}
	ICINGAWEB2_DIRECTOR_ENDPOINT_PORT=${ICINGAWEB2_DIRECTOR_ENDPOINT_PORT:-$ICINGAWEB2_API_TRANSPORT_PORT}
	ICINGAWEB2_DIRECTOR_ENDPOINT_USER=${ICINGAWEB2_DIRECTOR_ENDPOINT_USER:-$ICINGAWEB2_API_TRANSPORT_USER}
	ICINGAWEB2_DIRECTOR_ENDPOINT_PASS=${ICINGAWEB2_DIRECTOR_ENDPOINT_PASS:-$ICINGAWEB2_API_TRANSPORT_PASS}

	pgsql_wait \
		"${ICINGAWEB2_DIRECTOR_PGSQL_HOST}" \
		"${ICINGAWEB2_DIRECTOR_PGSQL_PORT}" \
		"${PGSQL_ROOT_USER}"

		for module in incubator director vsphere puppetdb ; do icingacli module enable $module ; done

	if [ -n "${PGSQL_ROOT_PASS:-}" ]; then
		echo "Director: Creating database"
		pgsql_conn "${ICINGAWEB2_DIRECTOR_PGSQL_HOST}" \
			"${ICINGAWEB2_DIRECTOR_PGSQL_PORT}" \
			"${PGSQL_ROOT_USER}" \
			"${PGSQL_ROOT_PASS}" <<-EOF
			\x
			DO \$\$
			BEGIN
			  SET client_min_messages to 'WARNING';
			  CREATE ROLE ${ICINGAWEB2_DIRECTOR_PGSQL_USER} WITH LOGIN PASSWORD '${ICINGAWEB2_DIRECTOR_PGSQL_PASS}';
			  EXCEPTION WHEN DUPLICATE_OBJECT THEN
			  RAISE NOTICE 'not creating role ${ICINGAWEB2_DIRECTOR_PGSQL_USER} -- it already exists';
			END
			\$\$;
		EOF
	        psql -q "postgresql://${PGSQL_ROOT_USER}:${PGSQL_ROOT_PASS}@${ICINGAWEB2_DIRECTOR_PGSQL_HOST}" \
        	-tc "SELECT 1 FROM pg_database WHERE datname = '${ICINGAWEB2_DIRECTOR_PGSQL_DATA}'" | grep 1 \
	        || pgsql_conn "${ICINGAWEB2_DIRECTOR_PGSQL_HOST}" \
			"${ICINGAWEB2_DIRECTOR_PGSQL__PORT}" \
			"${PGSQL_ROOT_USER}" \
			"${PGSQL_ROOT_PASS}" <<-EOF
			SET client_min_messages to 'WARNING';
			CREATE DATABASE ${ICINGAWEB2_DIRECTOR_PGSQL_DATA} WITH ENCODING UTF8 OWNER ${ICINGAWEB2_DIRECTOR_PGSQL_USER};
			GRANT ALL PRIVILEGES ON DATABASE ${ICINGAWEB2_DIRECTOR_PGSQL_DATA} TO ${ICINGAWEB2_DIRECTOR_PGSQL_USER};
			GRANT USAGE ON SCHEMA public TO ${ICINGAWEB2_DIRECTOR_PGSQL_USER};
			GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO ${ICINGAWEB2_DIRECTOR_PGSQL_USER};
			GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO ${ICINGAWEB2_DIRECTOR_PGSQL_USER};
			CREATE EXTENSION pgcrypto;
		EOF
	fi

	echo "Director: Verify database connection"

	pgsql_cred "${ICINGAWEB2_DIRECTOR_PGSQL_HOST}" \
		"${ICINGAWEB2_DIRECTOR_PGSQL_PORT}" \
		"${ICINGAWEB2_DIRECTOR_PGSQL_USER}" \
		"${ICINGAWEB2_DIRECTOR_PGSQL_PASS}" \
		"${ICINGAWEB2_DIRECTOR_PGSQL_DATA}"

	echo "Director: Configure"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director type       \"db\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director db         \"pgsql\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director host       \"${ICINGAWEB2_DIRECTOR_PGSQL_HOST}\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director port       \"${ICINGAWEB2_DIRECTOR_PGSQL_PORT}\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director dbname     \"${ICINGAWEB2_DIRECTOR_PGSQL_DATA}\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director username   \"${ICINGAWEB2_DIRECTOR_PGSQL_USER}\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director password   \"${ICINGAWEB2_DIRECTOR_PGSQL_PASS}\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director charset    \"${ICINGAWEB2_DIRECTOR_PGSQL_CHARSET:-utf8}\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director persistent \"${ICINGAWEB2_DIRECTOR_PERSISTENT:-0}\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director use_ssl    \"${ICINGAWEB2_DIRECTOR_SSL:-0}\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director ssl_key    \"${ICINGAWEB2_DIRECTOR_SSL_KEY}\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director ssl_cert   \"${ICINGAWEB2_DIRECTOR_SSL_CERT}\"
		ini_set ${ICINGAWEB2_RESOURCE_CONFIG} icingaweb2_director ssl_ca     \"${ICINGAWEB2_DIRECTOR_SSL_CA:-/etc/ssl/certs/ca-certificates.crt}\"

		ini_set $ICINGAWEB2_DIRECTOR_CONFIG config endpoint \"${ICINGAWEB2_DIRECTOR_ENDPOINT_FQDN}\"
		ini_set $ICINGAWEB2_DIRECTOR_CONFIG config host \"${ICINGAWEB2_DIRECTOR_ENDPOINT_HOST}\"
		ini_set $ICINGAWEB2_DIRECTOR_CONFIG config port \"${ICINGAWEB2_DIRECTOR_ENDPOINT_PORT}\"
		ini_set $ICINGAWEB2_DIRECTOR_CONFIG config username \"${ICINGAWEB2_DIRECTOR_ENDPOINT_USER}\"
		ini_set $ICINGAWEB2_DIRECTOR_CONFIG config password \"${ICINGAWEB2_DIRECTOR_ENDPOINT_PASS}\"

		icingacli director migration pending && icingacli director migration run

	echo -e "Director: Finished configuration\n"
	else
		for module in incubator director vsphere puppetdb ; do icingacli module disable $module ; done || true
fi
